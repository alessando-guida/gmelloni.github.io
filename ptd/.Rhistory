dSurvLumB <- survData3[as.character(survData3$PAM50)=="LumB",]
survObjLumB <- survfit(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
plot(main = "Surival Curves LumB", survObjLumB,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
lr_test
# Remove NKI study
survData2 <- survData[ survData$Study!="nki" , ]
originalSamples <- nrow(survData)
noNKISamples <- nrow(survData2)
# Remove NA
survData3 <- survData2[ ,c("e.os", "t.os", "Cluster","age","PAM50")]
survData3 <- survData3[complete.cases(survData3),]
compCases <- nrow(survData3)
# Remove 0 time outliers
survData3 <- survData3[ survData3$t.os!=0 , ]
# Check time outliers, they will become lost at followup
outliers <- 150*days.per.month # End of study set to 150 months
survData3[ survData3$t.os > outliers , "e.os"] <- 0
survData3[ survData3$t.os > outliers , "t.os"] <- outliers
# Create survival variables
survData3$months_to_death <- survData3$t.os / days.per.month
survData3$vital_status <- survData3$e.os
kable(
data.frame(row.names = c("All samples" , "Without NKI study" , "Complete Cases"
, "No zero time" )
, "Number of Samples" =  c(originalSamples , noNKISamples , compCases , nrow(survData3))
, check.names = FALSE)
)
survObj <- survfit(Surv(survData3$months_to_death,
survData3$vital_status) ~ survData3$Cluster)
plot(main = "Surival Curves Clusters", survObj,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(survData3$months_to_death,
survData3$vital_status) ~ survData3$Cluster)
lr_test
dSurvLumB <- survData3[as.character(survData3$PAM50)=="LumB",]
survObjLumB <- survfit(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
plot(main = "Surival Curves LumB", survObjLumB,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
lr_test
dSurvLumB <- survData3[as.character(survData3$PAM50)=="LumB",]
survObjLumB <- survfit(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
plot(main = "Surival Curves LumB", survObjLumB,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
lr_test
# Remove NKI study
survData2 <- survData[ survData$Study!="nki" , ]
originalSamples <- nrow(survData)
noNKISamples <- nrow(survData2)
# Remove NA
survData3 <- survData2[ ,c("e.os", "t.os", "Cluster","age","PAM50")]
survData3 <- survData3[complete.cases(survData3),]
compCases <- nrow(survData3)
# Remove 0 time outliers
survData3 <- survData3[ survData3$t.os!=0 , ]
# Check time outliers, they will become lost at followup
outliers <- mean(survData3$t.os) + 2*sd(survData3$t.os)
# outliers <- 150*days.per.month # End of study set to 150 months
survData3[ survData3$t.os > outliers , "e.os"] <- 0
survData3[ survData3$t.os > outliers , "t.os"] <- outliers
# Create survival variables
survData3$months_to_death <- survData3$t.os / days.per.month
survData3$vital_status <- survData3$e.os
kable(
data.frame(row.names = c("All samples" , "Without NKI study" , "Complete Cases"
, "No zero time" )
, "Number of Samples" =  c(originalSamples , noNKISamples , compCases , nrow(survData3))
, check.names = FALSE)
)
survObj <- survfit(Surv(survData3$months_to_death,
survData3$vital_status) ~ survData3$Cluster)
plot(main = "Surival Curves Clusters", survObj,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(survData3$months_to_death,
survData3$vital_status) ~ survData3$Cluster)
lr_test
dSurvLumB <- survData3[as.character(survData3$PAM50)=="LumB",]
survObjLumB <- survfit(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
plot(main = "Surival Curves LumB", survObjLumB,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumB$months_to_death,
dSurvLumB$vital_status) ~ dSurvLumB$Cluster)
lr_test
dSurvLumA <- survData3[as.character(survData3$PAM50)=="LumA",]
survObjLumA <- survfit(Surv(dSurvLumA$months_to_death,
dSurvLumA$vital_status) ~ dSurvLumA$Cluster)
plot(main = "Surival Curves LumA", survObjLumA,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumA$months_to_death,
dSurvLumA$vital_status) ~ dSurvLumA$Cluster)
lr_test
dSurvHer2 <- survData3[as.character(survData3$PAM50)=="Her2",]
survObjHer2 <- survfit(Surv(dSurvHer2$months_to_death,
dSurvHer2$vital_status) ~ dSurvHer2$Cluster)
plot(main = "Surival Curves Her2", survObjHer2,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
dSurvHer2 <- survData3[as.character(survData3$PAM50)=="Her2",]
survObjHer2 <- survfit(Surv(dSurvHer2$months_to_death,
dSurvHer2$vital_status) ~ dSurvHer2$Cluster)
dev.off()
dev.off()
dSurvHer2 <- survData3[as.character(survData3$PAM50)=="Her2",]
survObjHer2 <- survfit(Surv(dSurvHer2$months_to_death,
dSurvHer2$vital_status) ~ dSurvHer2$Cluster)
plot(main = "Surival Curves Her2", survObjHer2,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
survObjHer2
table(dSurvHer2$Cluster)
ggsurvplot(survObjLumB , palette = c( "palegreen4" , "red3" ) , ylim=c(0.4 , 1)
, legend.title = "Signature" , legend.labs = c("DOWN" , "UP")
, risk.table = TRUE , conf.int = TRUE , surv.plot.height = 0.7
, risk.table.fontsize = 4 , pval = TRUE , pval.coord = c(25 , 0.5)
, xlab = "Time in months")
head(ggsurvplot(survObjLumB , palette = c( "palegreen4" , "red3" ) , ylim=c(0.4 , 1)
, legend.title = "Signature" , legend.labs = c("DOWN" , "UP")
, risk.table = TRUE , conf.int = TRUE , surv.plot.height = 0.7
, risk.table.fontsize = 4 , pval = TRUE , pval.coord = c(25 , 0.5)
, xlab = "Time in months"))
head(dSurvLumB)
plot(main = "Surival Curves LumA", survObjLumA,
col =c("palegreen4", "red3"),lty = 1,lwd = 3,
xlab = "Time (months)",ylab = "Probability of Survival")
legend("topright",
fill = c("palegreen4", "red3"),
legend = c("DOWN","UP"),bty = "n")
lr_test <- survdiff(Surv(dSurvLumA$months_to_death,
dSurvLumA$vital_status) ~ dSurvLumA$Cluster)
lr_test
??h.crit
library(knitr)
library(DT)
knitr::opts_chunk$set(
fig.path = "images_extragenes/"
, message = FALSE
, warning = FALSE
)
setwd("~/Dropbox/Closed_Projects/Linsey/geo")
library(gdata)
library(pheatmap)
library(magrittr)
library(data.table)
library(survival)
library(GGally)
library(ggplot2)
library(cowplot)
library(survminer)
# little special to compare NAs
"%eq%" <- function(x , y) {
out <- x==y
nacomp <- is.na(x)==is.na(y)
out[is.na(out)] <- nacomp[is.na(out)]
return(out)
}
clin1 <- read.table("GSE1456/GSE1456_clinical_data.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin2 <- read.table("GSE2034/GSE2034_clinical.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin4 <- read.table("GSE7390/GSE7390_transbig2006affy_demo.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin3 <- readLines("GSE4922/GSE4922_Clinical_file_for_both_Uppsala_Singapore_Samples.txt") %>%  strsplit(. , "\t")
clin3Head <- clin3[[1]]
maxLen <- max(lengths(clin3))
clin3 <- lapply(clin3[2:length(clin3)] , function(x) {
if(length(x)<maxLen)
c(x , rep(NA , maxLen - length(x)))
else
x}) %>%
do.call("rbind" , .) %>%
as.data.frame(stringsAsFactors=FALSE) %>%
setNames(clin3Head)
# FIX FIRST CLINICAL FILE GSE1456
conversion1 <- data.frame(
original = c("No Subtype","Luminal A","Luminal B"
,"Basal","ERBB2","Normal Like")
,new = c("No Subtype","Luminal A","Luminal B"
,"Basal","HER2+","Normal Like")
,stringsAsFactors = FALSE)
conversionSamps <- read.xls("GSE1456/id_conversion_GSE1456.xlsx" , header=TRUE , as.is=TRUE) %>%
.[ .$arrayType=="HG-U133A" , ]
clin1_refactor <- data.frame(SampleID = plyr::mapvalues(from = conversionSamps$Sample_title ,
to = conversionSamps$Sample_geo_accession ,
clin1$ID_REF)
, Status_Death = clin1$DEATH
, Time_Death = clin1$SURV_DEATH*12
, Status_Relapse = clin1$RELAPSE
, Time_Relapse = clin1$SURV_RELAPSE*12
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = plyr::mapvalues(from = conversion1$original
, to = conversion1$new , clin1$SUBTYPE)
, ER_status = ifelse(grepl("Luminal" , clin1$SUBTYPE) , 1 , 0)
, Grade = clin1$ELSTON
, Status_BCrelated = clin1$DEATH_BC
, LN_status = NA
, P53_status = NA
, Age = NA
, Tumor_size = NA
, Study = "GSE1456"
, stringsAsFactors = FALSE)
# FIX SECOND CLINICAL FILE GSE2034
clin2_refactor <- data.frame(SampleID = clin2$GEO.asscession.number
, Status_Death = NA
, Time_Death = NA
, Status_Relapse = clin2$relapse..1.True.
, Time_Relapse = clin2$time.to.relapse.or.last.follow.up..months.
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = NA
, ER_status = ifelse(grepl("\\+" , clin2$ER.Status) , 1 , 0)
, Grade = NA
, Status_BCrelated = NA
, LN_status = NA
, P53_status = NA
, Age = NA
, Tumor_size = NA
, Study = "GSE2034"
, stringsAsFactors = FALSE)
# FIX THIRD CLINICAL FILE GSE4922
clin3_refactor <- data.frame(SampleID = strsplit( clin3$"GSM ID (A/B chip)" , "\\/") %>% sapply(. , '[' , 1)
, Status_Death = NA
, Time_Death = NA
, Status_Relapse = ifelse(clin3[ , 9]=="" , NA , as.integer(clin3[ , 9]))
, Time_Relapse = as.numeric(clin3$"DFS TIME (yrs)")*12
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = NA
, ER_status = ifelse(grepl("+" , clin3$"ER status") , 1 , 0)
, Grade = as.integer(clin3$"Elston (NGS) histologic grade")
, Status_BCrelated = NA
, LN_status = ifelse(grepl("+" , clin3$"Lymph node status") , 1 , 0)
, P53_status = ifelse( grepl("p53\\+" , clin3$"p53 seq mut status (p53+=mutant; p53-=wildtype)")  , 1 ,
ifelse(grepl("p53\\-" , clin3$"p53 seq mut status (p53+=mutant; p53-=wildtype)"), 0 , NA))
, Age = as.numeric(clin3$"age at diagnosis")
, Tumor_size = as.numeric(clin3$"tumor size (mm)")
, Study = "GSE4922"
, stringsAsFactors = FALSE)
# FIX FOURTH CLINICAL FILE GSE7390
clin4_refactor <- data.frame(SampleID = clin4$geo_accn
, Status_Death = clin4$e.os
, Time_Death = (clin4$t.os/365)*12
, Status_Relapse = clin4$e.rfs
, Time_Relapse = (clin4$t.rfs/365)*12
, Status_Metastasis = clin4$e.dmfs
, Time_Metastasis = (clin4$t.dmfs/365)*12
, Subtype = NA
, ER_status = ifelse( clin4$er %eq% 1 , 1 , 0)
, Grade = clin4$grade
, Status_BCrelated = NA
, LN_status = ifelse( clin4$Lymp_infil %eq% 3 , "+"
, ifelse(clin4$Lymp_infil %eq% 2 , "+/-"
, ifelse(clin4$Lymp_infil %eq% 1 , "-" , NA)))
, P53_status = NA
, Age = clin4$age
, Tumor_size = clin4$size
, Study = "GSE7390"
, stringsAsFactors = FALSE)
# Put all together
clinComplete_all <- rbind(clin1_refactor , clin2_refactor , clin3_refactor , clin4_refactor)
# Remove the samples without survival data
clinComplete <- clinComplete_all[ !is.na(clinComplete_all$Status_Relapse) , ]
samps_factor <- factor(clinComplete$Study , levels=c("GSE1456","GSE2034","GSE4922","GSE7390"))
df_check <- data.frame(row.names = c("GSE1456","GSE2034","GSE4922","GSE7390")
, Partecipants = as.vector(table(samps_factor)))
tmp <- split(clinComplete , samps_factor)
for( i in colnames(clinComplete)[-ncol(clinComplete)]){
df_check[ , i] <- sapply(tmp , function(x) {
if(all(is.na(x[ , i]))){
""
} else {
"X"
}})
}
df_check_total <- data.frame(row.names="Total" , Partecipants = sum(df_check$Partecipants))
for(i in colnames(clinComplete)[-ncol(clinComplete)]){
df_check_total[ , i] <- sum(df_check[df_check[ , i]=="X" , "Partecipants"])
}
df_check <- rbind(df_check , df_check_total)
DT::datatable(t(df_check) , options = list(pageLength = 20))
# A little clean up, invisible
rm(i , tmp , maxLen , df_check_total , samps_factor)
df <- readRDS("geo_brca_normalized.rds")
rm(list=ls())
library(knitr)
library(DT)
knitr::opts_chunk$set(
fig.path = "images_extragenes/"
, message = FALSE
, warning = FALSE
)
setwd("~/Dropbox/Closed_Projects/Linsey/geo")
library(gdata)
library(pheatmap)
library(magrittr)
library(data.table)
library(survival)
library(GGally)
library(ggplot2)
library(cowplot)
library(survminer)
# little special to compare NAs
"%eq%" <- function(x , y) {
out <- x==y
nacomp <- is.na(x)==is.na(y)
out[is.na(out)] <- nacomp[is.na(out)]
return(out)
}
clin1 <- read.table("GSE1456/GSE1456_clinical_data.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin2 <- read.table("GSE2034/GSE2034_clinical.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin4 <- read.table("GSE7390/GSE7390_transbig2006affy_demo.txt" , sep="\t" , as.is=TRUE , header=TRUE)
clin3 <- readLines("GSE4922/GSE4922_Clinical_file_for_both_Uppsala_Singapore_Samples.txt") %>%  strsplit(. , "\t")
clin3Head <- clin3[[1]]
maxLen <- max(lengths(clin3))
clin3 <- lapply(clin3[2:length(clin3)] , function(x) {
if(length(x)<maxLen)
c(x , rep(NA , maxLen - length(x)))
else
x}) %>%
do.call("rbind" , .) %>%
as.data.frame(stringsAsFactors=FALSE) %>%
setNames(clin3Head)
# FIX FIRST CLINICAL FILE GSE1456
conversion1 <- data.frame(
original = c("No Subtype","Luminal A","Luminal B"
,"Basal","ERBB2","Normal Like")
,new = c("No Subtype","Luminal A","Luminal B"
,"Basal","HER2+","Normal Like")
,stringsAsFactors = FALSE)
conversionSamps <- read.xls("GSE1456/id_conversion_GSE1456.xlsx" , header=TRUE , as.is=TRUE) %>%
.[ .$arrayType=="HG-U133A" , ]
clin1_refactor <- data.frame(SampleID = plyr::mapvalues(from = conversionSamps$Sample_title ,
to = conversionSamps$Sample_geo_accession ,
clin1$ID_REF)
, Status_Death = clin1$DEATH
, Time_Death = clin1$SURV_DEATH*12
, Status_Relapse = clin1$RELAPSE
, Time_Relapse = clin1$SURV_RELAPSE*12
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = plyr::mapvalues(from = conversion1$original
, to = conversion1$new , clin1$SUBTYPE)
, ER_status = ifelse(grepl("Luminal" , clin1$SUBTYPE) , 1 , 0)
, Grade = clin1$ELSTON
, Status_BCrelated = clin1$DEATH_BC
, LN_status = NA
, P53_status = NA
, Age = NA
, Tumor_size = NA
, Study = "GSE1456"
, stringsAsFactors = FALSE)
# FIX SECOND CLINICAL FILE GSE2034
clin2_refactor <- data.frame(SampleID = clin2$GEO.asscession.number
, Status_Death = NA
, Time_Death = NA
, Status_Relapse = clin2$relapse..1.True.
, Time_Relapse = clin2$time.to.relapse.or.last.follow.up..months.
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = NA
, ER_status = ifelse(grepl("\\+" , clin2$ER.Status) , 1 , 0)
, Grade = NA
, Status_BCrelated = NA
, LN_status = NA
, P53_status = NA
, Age = NA
, Tumor_size = NA
, Study = "GSE2034"
, stringsAsFactors = FALSE)
# FIX THIRD CLINICAL FILE GSE4922
clin3_refactor <- data.frame(SampleID = strsplit( clin3$"GSM ID (A/B chip)" , "\\/") %>% sapply(. , '[' , 1)
, Status_Death = NA
, Time_Death = NA
, Status_Relapse = ifelse(clin3[ , 9]=="" , NA , as.integer(clin3[ , 9]))
, Time_Relapse = as.numeric(clin3$"DFS TIME (yrs)")*12
, Status_Metastasis = NA
, Time_Metastasis = NA
, Subtype = NA
, ER_status = ifelse(grepl("+" , clin3$"ER status") , 1 , 0)
, Grade = as.integer(clin3$"Elston (NGS) histologic grade")
, Status_BCrelated = NA
, LN_status = ifelse(grepl("+" , clin3$"Lymph node status") , 1 , 0)
, P53_status = ifelse( grepl("p53\\+" , clin3$"p53 seq mut status (p53+=mutant; p53-=wildtype)")  , 1 ,
ifelse(grepl("p53\\-" , clin3$"p53 seq mut status (p53+=mutant; p53-=wildtype)"), 0 , NA))
, Age = as.numeric(clin3$"age at diagnosis")
, Tumor_size = as.numeric(clin3$"tumor size (mm)")
, Study = "GSE4922"
, stringsAsFactors = FALSE)
# FIX FOURTH CLINICAL FILE GSE7390
clin4_refactor <- data.frame(SampleID = clin4$geo_accn
, Status_Death = clin4$e.os
, Time_Death = (clin4$t.os/365)*12
, Status_Relapse = clin4$e.rfs
, Time_Relapse = (clin4$t.rfs/365)*12
, Status_Metastasis = clin4$e.dmfs
, Time_Metastasis = (clin4$t.dmfs/365)*12
, Subtype = NA
, ER_status = ifelse( clin4$er %eq% 1 , 1 , 0)
, Grade = clin4$grade
, Status_BCrelated = NA
, LN_status = ifelse( clin4$Lymp_infil %eq% 3 , "+"
, ifelse(clin4$Lymp_infil %eq% 2 , "+/-"
, ifelse(clin4$Lymp_infil %eq% 1 , "-" , NA)))
, P53_status = NA
, Age = clin4$age
, Tumor_size = clin4$size
, Study = "GSE7390"
, stringsAsFactors = FALSE)
# Put all together
clinComplete_all <- rbind(clin1_refactor , clin2_refactor , clin3_refactor , clin4_refactor)
# Remove the samples without survival data
clinComplete <- clinComplete_all[ !is.na(clinComplete_all$Status_Relapse) , ]
samps_factor <- factor(clinComplete$Study , levels=c("GSE1456","GSE2034","GSE4922","GSE7390"))
df_check <- data.frame(row.names = c("GSE1456","GSE2034","GSE4922","GSE7390")
, Partecipants = as.vector(table(samps_factor)))
tmp <- split(clinComplete , samps_factor)
for( i in colnames(clinComplete)[-ncol(clinComplete)]){
df_check[ , i] <- sapply(tmp , function(x) {
if(all(is.na(x[ , i]))){
""
} else {
"X"
}})
}
df_check_total <- data.frame(row.names="Total" , Partecipants = sum(df_check$Partecipants))
for(i in colnames(clinComplete)[-ncol(clinComplete)]){
df_check_total[ , i] <- sum(df_check[df_check[ , i]=="X" , "Partecipants"])
}
df_check <- rbind(df_check , df_check_total)
DT::datatable(t(df_check) , options = list(pageLength = 20))
# A little clean up, invisible
rm(i , tmp , maxLen , df_check_total , samps_factor)
df <- readRDS("geo_brca_normalized.rds")
# Mit-Sig
angela <- read.xls("../tcag_brca/189genes_Zscore-TCGAinfo_xgiorgio.xlsx" , header=TRUE , as.is=TRUE )
# Desmedt
desmedt <- read.xls("forRevision/Desmedt_genelists.xlsx" , header=TRUE , sheet="AURKA" , as.is=TRUE)
# Wirapati
wirapati <- read.table("forRevision/Wirapati_additional_file_3.txt" , header=TRUE , as.is=TRUE , sep="\t")
# Not in Desmedt
dfangela <- df[ !df$GENE_NAME %in% desmedt$EntrezGeneID , ]
# Not in Wirapati
dfangela <- df[ df$GENE_NAME %in% wirapati$geneid[ wirapati$prototype=="AURKA"] , ]
# Mit-Sig Genes
dfangela <- df[ df$GeneSymbol %in% colnames(angela)
, c("GeneSymbol" , colnames(df)[ colnames(df) %in% clinComplete$SampleID] )]
rownames(dfangela) <- dfangela$GeneSymbol
dfangela$GeneSymbol <- NULL
dim(dfangela)
# Not in Desmedt
dfangela <- df[ !df$GENE_NAME %in% desmedt$EntrezGeneID , ]
# Not in Wirapati
dfangela <- df[ !df$GENE_NAME %in% wirapati$geneid[ wirapati$prototype=="AURKA"] , ]
# Mit-Sig Genes
dfangela <- df[ df$GeneSymbol %in% colnames(angela)
, c("GeneSymbol" , colnames(df)[ colnames(df) %in% clinComplete$SampleID] )]
rownames(dfangela) <- dfangela$GeneSymbol
dfangela$GeneSymbol <- NULL
dim(df)
df[1:3 , 1:13]
# Not in Desmedt
dfangela <- df[ !df$GENE_NAME %in% desmedt$EntrezGeneID , ]
# Not in Wirapati
dfangela <- dfangela[ !dfangela$GENE_NAME %in% wirapati$geneid[ wirapati$prototype=="AURKA"] , ]
# Mit-Sig Genes
dfangela <- dfangela[ dfangela$GeneSymbol %in% colnames(angela)
, c("GeneSymbol" , colnames(dfangela)[ colnames(dfangela) %in% clinComplete$SampleID] )]
rownames(dfangela) <- dfangela$GeneSymbol
dfangela$GeneSymbol <- NULL
dim(dfangela)
setwd("~/Dropbox/git_guida/PTDwebpage/gmelloni.github.io/ptd")
